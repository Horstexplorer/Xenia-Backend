/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.joop.tables.records;


import de.netbeacon.xenia.joop.tables.Permission;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionRecord extends UpdatableRecordImpl<PermissionRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.permission.permission_id</code>.
     */
    public PermissionRecord setPermissionId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.permission.permission_id</code>.
     */
    public Integer getPermissionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.permission.permission_name</code>.
     */
    public PermissionRecord setPermissionName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.permission.permission_name</code>.
     */
    public String getPermissionName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.permission.permission_description</code>.
     */
    public PermissionRecord setPermissionDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.permission.permission_description</code>.
     */
    public String getPermissionDescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Permission.PERMISSION.PERMISSION_ID;
    }

    @Override
    public Field<String> field2() {
        return Permission.PERMISSION.PERMISSION_NAME;
    }

    @Override
    public Field<String> field3() {
        return Permission.PERMISSION.PERMISSION_DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getPermissionId();
    }

    @Override
    public String component2() {
        return getPermissionName();
    }

    @Override
    public String component3() {
        return getPermissionDescription();
    }

    @Override
    public Integer value1() {
        return getPermissionId();
    }

    @Override
    public String value2() {
        return getPermissionName();
    }

    @Override
    public String value3() {
        return getPermissionDescription();
    }

    @Override
    public PermissionRecord value1(Integer value) {
        setPermissionId(value);
        return this;
    }

    @Override
    public PermissionRecord value2(String value) {
        setPermissionName(value);
        return this;
    }

    @Override
    public PermissionRecord value3(String value) {
        setPermissionDescription(value);
        return this;
    }

    @Override
    public PermissionRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermissionRecord
     */
    public PermissionRecord() {
        super(Permission.PERMISSION);
    }

    /**
     * Create a detached, initialised PermissionRecord
     */
    public PermissionRecord(Integer permissionId, String permissionName, String permissionDescription) {
        super(Permission.PERMISSION);

        setPermissionId(permissionId);
        setPermissionName(permissionName);
        setPermissionDescription(permissionDescription);
    }
}
