/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.joop.tables.records;


import de.netbeacon.xenia.joop.tables.InternalBotShards;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternalBotShardsRecord extends UpdatableRecordImpl<InternalBotShardsRecord> implements Record2<Long, Integer> {

    private static final long serialVersionUID = 1936693036;

    /**
     * Setter for <code>public.internal_bot_shards.shard_id</code>.
     */
    public InternalBotShardsRecord setShardId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.internal_bot_shards.shard_id</code>.
     */
    public Long getShardId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.internal_bot_shards.client_id</code>.
     */
    public InternalBotShardsRecord setClientId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.internal_bot_shards.client_id</code>.
     */
    public Integer getClientId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return InternalBotShards.INTERNAL_BOT_SHARDS.SHARD_ID;
    }

    @Override
    public Field<Integer> field2() {
        return InternalBotShards.INTERNAL_BOT_SHARDS.CLIENT_ID;
    }

    @Override
    public Long component1() {
        return getShardId();
    }

    @Override
    public Integer component2() {
        return getClientId();
    }

    @Override
    public Long value1() {
        return getShardId();
    }

    @Override
    public Integer value2() {
        return getClientId();
    }

    @Override
    public InternalBotShardsRecord value1(Long value) {
        setShardId(value);
        return this;
    }

    @Override
    public InternalBotShardsRecord value2(Integer value) {
        setClientId(value);
        return this;
    }

    @Override
    public InternalBotShardsRecord values(Long value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InternalBotShardsRecord
     */
    public InternalBotShardsRecord() {
        super(InternalBotShards.INTERNAL_BOT_SHARDS);
    }

    /**
     * Create a detached, initialised InternalBotShardsRecord
     */
    public InternalBotShardsRecord(Long shardId, Integer clientId) {
        super(InternalBotShards.INTERNAL_BOT_SHARDS);

        set(0, shardId);
        set(1, clientId);
    }
}
