/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.joop.tables.records;


import de.netbeacon.xenia.joop.tables.Users;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record4<Long, LocalDateTime, String, String> {

    private static final long serialVersionUID = 2140531753;

    /**
     * Setter for <code>public.users.user_id</code>.
     */
    public UsersRecord setUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.users.creation_timestamp</code>.
     */
    public UsersRecord setCreationTimestamp(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.creation_timestamp</code>.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.users.internal_role</code>.
     */
    public UsersRecord setInternalRole(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users.internal_role</code>.
     */
    public String getInternalRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.preferred_language</code>.
     */
    public UsersRecord setPreferredLanguage(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users.preferred_language</code>.
     */
    public String getPreferredLanguage() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalDateTime, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, LocalDateTime, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Users.USERS.CREATION_TIMESTAMP;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.INTERNAL_ROLE;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.PREFERRED_LANGUAGE;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreationTimestamp();
    }

    @Override
    public String component3() {
        return getInternalRole();
    }

    @Override
    public String component4() {
        return getPreferredLanguage();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreationTimestamp();
    }

    @Override
    public String value3() {
        return getInternalRole();
    }

    @Override
    public String value4() {
        return getPreferredLanguage();
    }

    @Override
    public UsersRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UsersRecord value2(LocalDateTime value) {
        setCreationTimestamp(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setInternalRole(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setPreferredLanguage(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, LocalDateTime value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long userId, LocalDateTime creationTimestamp, String internalRole, String preferredLanguage) {
        super(Users.USERS);

        set(0, userId);
        set(1, creationTimestamp);
        set(2, internalRole);
        set(3, preferredLanguage);
    }
}
