/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.joop.tables.records;


import de.netbeacon.xenia.joop.tables.ClientShards;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientShardsRecord extends UpdatableRecordImpl<ClientShardsRecord> implements Record2<Integer, Long> {

    private static final long serialVersionUID = -1480398518;

    /**
     * Setter for <code>public.client_shards.shard_id</code>.
     */
    public ClientShardsRecord setShardId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.client_shards.shard_id</code>.
     */
    public Integer getShardId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.client_shards.bot_id</code>.
     */
    public ClientShardsRecord setBotId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.client_shards.bot_id</code>.
     */
    public Long getBotId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ClientShards.CLIENT_SHARDS.SHARD_ID;
    }

    @Override
    public Field<Long> field2() {
        return ClientShards.CLIENT_SHARDS.BOT_ID;
    }

    @Override
    public Integer component1() {
        return getShardId();
    }

    @Override
    public Long component2() {
        return getBotId();
    }

    @Override
    public Integer value1() {
        return getShardId();
    }

    @Override
    public Long value2() {
        return getBotId();
    }

    @Override
    public ClientShardsRecord value1(Integer value) {
        setShardId(value);
        return this;
    }

    @Override
    public ClientShardsRecord value2(Long value) {
        setBotId(value);
        return this;
    }

    @Override
    public ClientShardsRecord values(Integer value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientShardsRecord
     */
    public ClientShardsRecord() {
        super(ClientShards.CLIENT_SHARDS);
    }

    /**
     * Create a detached, initialised ClientShardsRecord
     */
    public ClientShardsRecord(Integer shardId, Long botId) {
        super(ClientShards.CLIENT_SHARDS);

        set(0, shardId);
        set(1, botId);
    }
}
