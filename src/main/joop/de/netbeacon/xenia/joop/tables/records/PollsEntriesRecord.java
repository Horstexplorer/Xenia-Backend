/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.joop.tables.records;


import de.netbeacon.xenia.joop.tables.PollsEntries;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PollsEntriesRecord extends UpdatableRecordImpl<PollsEntriesRecord> implements Record3<Long, Integer, Long> {

    private static final long serialVersionUID = 773028763;

    /**
     * Setter for <code>public.polls_entries.poll_id</code>.
     */
    public PollsEntriesRecord setPollId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.polls_entries.poll_id</code>.
     */
    public Long getPollId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.polls_entries.poll_option_id</code>.
     */
    public PollsEntriesRecord setPollOptionId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.polls_entries.poll_option_id</code>.
     */
    public Integer getPollOptionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.polls_entries.user_id</code>.
     */
    public PollsEntriesRecord setUserId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.polls_entries.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Integer, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Integer, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PollsEntries.POLLS_ENTRIES.POLL_ID;
    }

    @Override
    public Field<Integer> field2() {
        return PollsEntries.POLLS_ENTRIES.POLL_OPTION_ID;
    }

    @Override
    public Field<Long> field3() {
        return PollsEntries.POLLS_ENTRIES.USER_ID;
    }

    @Override
    public Long component1() {
        return getPollId();
    }

    @Override
    public Integer component2() {
        return getPollOptionId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getPollId();
    }

    @Override
    public Integer value2() {
        return getPollOptionId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public PollsEntriesRecord value1(Long value) {
        setPollId(value);
        return this;
    }

    @Override
    public PollsEntriesRecord value2(Integer value) {
        setPollOptionId(value);
        return this;
    }

    @Override
    public PollsEntriesRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public PollsEntriesRecord values(Long value1, Integer value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PollsEntriesRecord
     */
    public PollsEntriesRecord() {
        super(PollsEntries.POLLS_ENTRIES);
    }

    /**
     * Create a detached, initialised PollsEntriesRecord
     */
    public PollsEntriesRecord(Long pollId, Integer pollOptionId, Long userId) {
        super(PollsEntries.POLLS_ENTRIES);

        set(0, pollId);
        set(1, pollOptionId);
        set(2, userId);
    }
}
