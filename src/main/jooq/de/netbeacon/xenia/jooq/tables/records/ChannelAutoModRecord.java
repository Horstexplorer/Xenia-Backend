/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.jooq.tables.records;


import de.netbeacon.xenia.jooq.tables.ChannelAutoMod;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChannelAutoModRecord extends UpdatableRecordImpl<ChannelAutoModRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.channel_auto_mod.channel_id</code>.
     */
    public ChannelAutoModRecord setChannelId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.channel_auto_mod.channel_id</code>.
     */
    public Long getChannelId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.channel_auto_mod.filter_content</code>.
     */
    public ChannelAutoModRecord setFilterContent(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.channel_auto_mod.filter_content</code>.
     */
    public Long getFilterContent() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.channel_auto_mod.filter_behaviour</code>.
     */
    public ChannelAutoModRecord setFilterBehaviour(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.channel_auto_mod.filter_behaviour</code>.
     */
    public Long getFilterBehaviour() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ChannelAutoMod.CHANNEL_AUTO_MOD.CHANNEL_ID;
    }

    @Override
    public Field<Long> field2() {
        return ChannelAutoMod.CHANNEL_AUTO_MOD.FILTER_CONTENT;
    }

    @Override
    public Field<Long> field3() {
        return ChannelAutoMod.CHANNEL_AUTO_MOD.FILTER_BEHAVIOUR;
    }

    @Override
    public Long component1() {
        return getChannelId();
    }

    @Override
    public Long component2() {
        return getFilterContent();
    }

    @Override
    public Long component3() {
        return getFilterBehaviour();
    }

    @Override
    public Long value1() {
        return getChannelId();
    }

    @Override
    public Long value2() {
        return getFilterContent();
    }

    @Override
    public Long value3() {
        return getFilterBehaviour();
    }

    @Override
    public ChannelAutoModRecord value1(Long value) {
        setChannelId(value);
        return this;
    }

    @Override
    public ChannelAutoModRecord value2(Long value) {
        setFilterContent(value);
        return this;
    }

    @Override
    public ChannelAutoModRecord value3(Long value) {
        setFilterBehaviour(value);
        return this;
    }

    @Override
    public ChannelAutoModRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChannelAutoModRecord
     */
    public ChannelAutoModRecord() {
        super(ChannelAutoMod.CHANNEL_AUTO_MOD);
    }

    /**
     * Create a detached, initialised ChannelAutoModRecord
     */
    public ChannelAutoModRecord(Long channelId, Long filterContent, Long filterBehaviour) {
        super(ChannelAutoMod.CHANNEL_AUTO_MOD);

        setChannelId(channelId);
        setFilterContent(filterContent);
        setFilterBehaviour(filterBehaviour);
    }
}
