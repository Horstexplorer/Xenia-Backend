/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.jooq.tables.records;


import de.netbeacon.xenia.jooq.tables.LicenseTypes;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LicenseTypesRecord extends UpdatableRecordImpl<LicenseTypesRecord> implements Record9<Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.license_types.license_type_id</code>.
     */
    public LicenseTypesRecord setLicenseTypeId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.license_types.license_type_id</code>.
     */
    public Integer getLicenseTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.license_types.license_name</code>.
     */
    public LicenseTypesRecord setLicenseName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.license_types.license_name</code>.
     */
    public String getLicenseName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.license_types.license_description</code>.
     */
    public LicenseTypesRecord setLicenseDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.license_types.license_description</code>.
     */
    public String getLicenseDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.license_types.perk_channel_logging_c</code>.
     */
    public LicenseTypesRecord setPerkChannelLoggingC(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.license_types.perk_channel_logging_c</code>.
     */
    public Integer getPerkChannelLoggingC() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.license_types.perk_guild_roles_c</code>.
     */
    public LicenseTypesRecord setPerkGuildRolesC(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.license_types.perk_guild_roles_c</code>.
     */
    public Integer getPerkGuildRolesC() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.license_types.perk_misc_tags_c</code>.
     */
    public LicenseTypesRecord setPerkMiscTagsC(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.license_types.perk_misc_tags_c</code>.
     */
    public Integer getPerkMiscTagsC() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.license_types.perk_misc_notifications_c</code>.
     */
    public LicenseTypesRecord setPerkMiscNotificationsC(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.license_types.perk_misc_notifications_c</code>.
     */
    public Integer getPerkMiscNotificationsC() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>public.license_types.perk_misc_twitchnotifications_c</code>.
     */
    public LicenseTypesRecord setPerkMiscTwitchnotificationsC(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.license_types.perk_misc_twitchnotifications_c</code>.
     */
    public Integer getPerkMiscTwitchnotificationsC() {
        return (Integer) get(7);
    }

    /**
     * Setter for
     * <code>public.license_types.perk_channel_d43z1_selflearning_c</code>.
     */
    public LicenseTypesRecord setPerkChannelD43z1SelflearningC(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.license_types.perk_channel_d43z1_selflearning_c</code>.
     */
    public Integer getPerkChannelD43z1SelflearningC() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return LicenseTypes.LICENSE_TYPES.LICENSE_TYPE_ID;
    }

    @Override
    public Field<String> field2() {
        return LicenseTypes.LICENSE_TYPES.LICENSE_NAME;
    }

    @Override
    public Field<String> field3() {
        return LicenseTypes.LICENSE_TYPES.LICENSE_DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return LicenseTypes.LICENSE_TYPES.PERK_CHANNEL_LOGGING_C;
    }

    @Override
    public Field<Integer> field5() {
        return LicenseTypes.LICENSE_TYPES.PERK_GUILD_ROLES_C;
    }

    @Override
    public Field<Integer> field6() {
        return LicenseTypes.LICENSE_TYPES.PERK_MISC_TAGS_C;
    }

    @Override
    public Field<Integer> field7() {
        return LicenseTypes.LICENSE_TYPES.PERK_MISC_NOTIFICATIONS_C;
    }

    @Override
    public Field<Integer> field8() {
        return LicenseTypes.LICENSE_TYPES.PERK_MISC_TWITCHNOTIFICATIONS_C;
    }

    @Override
    public Field<Integer> field9() {
        return LicenseTypes.LICENSE_TYPES.PERK_CHANNEL_D43Z1_SELFLEARNING_C;
    }

    @Override
    public Integer component1() {
        return getLicenseTypeId();
    }

    @Override
    public String component2() {
        return getLicenseName();
    }

    @Override
    public String component3() {
        return getLicenseDescription();
    }

    @Override
    public Integer component4() {
        return getPerkChannelLoggingC();
    }

    @Override
    public Integer component5() {
        return getPerkGuildRolesC();
    }

    @Override
    public Integer component6() {
        return getPerkMiscTagsC();
    }

    @Override
    public Integer component7() {
        return getPerkMiscNotificationsC();
    }

    @Override
    public Integer component8() {
        return getPerkMiscTwitchnotificationsC();
    }

    @Override
    public Integer component9() {
        return getPerkChannelD43z1SelflearningC();
    }

    @Override
    public Integer value1() {
        return getLicenseTypeId();
    }

    @Override
    public String value2() {
        return getLicenseName();
    }

    @Override
    public String value3() {
        return getLicenseDescription();
    }

    @Override
    public Integer value4() {
        return getPerkChannelLoggingC();
    }

    @Override
    public Integer value5() {
        return getPerkGuildRolesC();
    }

    @Override
    public Integer value6() {
        return getPerkMiscTagsC();
    }

    @Override
    public Integer value7() {
        return getPerkMiscNotificationsC();
    }

    @Override
    public Integer value8() {
        return getPerkMiscTwitchnotificationsC();
    }

    @Override
    public Integer value9() {
        return getPerkChannelD43z1SelflearningC();
    }

    @Override
    public LicenseTypesRecord value1(Integer value) {
        setLicenseTypeId(value);
        return this;
    }

    @Override
    public LicenseTypesRecord value2(String value) {
        setLicenseName(value);
        return this;
    }

    @Override
    public LicenseTypesRecord value3(String value) {
        setLicenseDescription(value);
        return this;
    }

    @Override
    public LicenseTypesRecord value4(Integer value) {
        setPerkChannelLoggingC(value);
        return this;
    }

    @Override
    public LicenseTypesRecord value5(Integer value) {
        setPerkGuildRolesC(value);
        return this;
    }

    @Override
    public LicenseTypesRecord value6(Integer value) {
        setPerkMiscTagsC(value);
        return this;
    }

    @Override
    public LicenseTypesRecord value7(Integer value) {
        setPerkMiscNotificationsC(value);
        return this;
    }

    @Override
    public LicenseTypesRecord value8(Integer value) {
        setPerkMiscTwitchnotificationsC(value);
        return this;
    }

    @Override
    public LicenseTypesRecord value9(Integer value) {
        setPerkChannelD43z1SelflearningC(value);
        return this;
    }

    @Override
    public LicenseTypesRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LicenseTypesRecord
     */
    public LicenseTypesRecord() {
        super(LicenseTypes.LICENSE_TYPES);
    }

    /**
     * Create a detached, initialised LicenseTypesRecord
     */
    public LicenseTypesRecord(Integer licenseTypeId, String licenseName, String licenseDescription, Integer perkChannelLoggingC, Integer perkGuildRolesC, Integer perkMiscTagsC, Integer perkMiscNotificationsC, Integer perkMiscTwitchnotificationsC, Integer perkChannelD43z1SelflearningC) {
        super(LicenseTypes.LICENSE_TYPES);

        setLicenseTypeId(licenseTypeId);
        setLicenseName(licenseName);
        setLicenseDescription(licenseDescription);
        setPerkChannelLoggingC(perkChannelLoggingC);
        setPerkGuildRolesC(perkGuildRolesC);
        setPerkMiscTagsC(perkMiscTagsC);
        setPerkMiscNotificationsC(perkMiscNotificationsC);
        setPerkMiscTwitchnotificationsC(perkMiscTwitchnotificationsC);
        setPerkChannelD43z1SelflearningC(perkChannelD43z1SelflearningC);
    }
}
