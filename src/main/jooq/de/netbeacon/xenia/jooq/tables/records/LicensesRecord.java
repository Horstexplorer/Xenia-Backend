/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.jooq.tables.records;


import de.netbeacon.xenia.jooq.tables.Licenses;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LicensesRecord extends UpdatableRecordImpl<LicensesRecord> implements Record6<Integer, String, Integer, Boolean, Integer, LocalDateTime>{

	private static final long serialVersionUID = 1L;

	/**
	 * Setter for <code>public.licenses.license_id</code>.
	 */
	public LicensesRecord setLicenseId(Integer value){
		set(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.licenses.license_id</code>.
	 */
	public Integer getLicenseId(){
		return (Integer) get(0);
	}

	/**
	 * Setter for <code>public.licenses.license_key</code>.
	 */
	public LicensesRecord setLicenseKey(String value){
		set(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.licenses.license_key</code>.
	 */
	public String getLicenseKey(){
		return (String) get(1);
	}

	/**
	 * Setter for <code>public.licenses.license_type</code>.
	 */
	public LicensesRecord setLicenseType(Integer value){
		set(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.licenses.license_type</code>.
	 */
	public Integer getLicenseType(){
		return (Integer) get(2);
	}

	/**
	 * Setter for <code>public.licenses.license_claimed</code>.
	 */
	public LicensesRecord setLicenseClaimed(Boolean value){
		set(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.licenses.license_claimed</code>.
	 */
	public Boolean getLicenseClaimed(){
		return (Boolean) get(3);
	}

	/**
	 * Setter for <code>public.licenses.license_duration_days</code>.
	 */
	public LicensesRecord setLicenseDurationDays(Integer value){
		set(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.licenses.license_duration_days</code>.
	 */
	public Integer getLicenseDurationDays(){
		return (Integer) get(4);
	}

	/**
	 * Setter for <code>public.licenses.license_activation_timestamp</code>.
	 */
	public LicensesRecord setLicenseActivationTimestamp(LocalDateTime value){
		set(5, value);
		return this;
	}

	/**
	 * Getter for <code>public.licenses.license_activation_timestamp</code>.
	 */
	public LocalDateTime getLicenseActivationTimestamp(){
		return (LocalDateTime) get(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<Integer> key(){
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	@Override
	public Row6<Integer, String, Integer, Boolean, Integer, LocalDateTime> fieldsRow(){
		return (Row6) super.fieldsRow();
	}

	@Override
	public Row6<Integer, String, Integer, Boolean, Integer, LocalDateTime> valuesRow(){
		return (Row6) super.valuesRow();
	}

	@Override
	public Field<Integer> field1(){
		return Licenses.LICENSES.LICENSE_ID;
	}

	@Override
	public Field<String> field2(){
		return Licenses.LICENSES.LICENSE_KEY;
	}

	@Override
	public Field<Integer> field3(){
		return Licenses.LICENSES.LICENSE_TYPE;
	}

	@Override
	public Field<Boolean> field4(){
		return Licenses.LICENSES.LICENSE_CLAIMED;
	}

	@Override
	public Field<Integer> field5(){
		return Licenses.LICENSES.LICENSE_DURATION_DAYS;
	}

	@Override
	public Field<LocalDateTime> field6(){
		return Licenses.LICENSES.LICENSE_ACTIVATION_TIMESTAMP;
	}

	@Override
	public Integer component1(){
		return getLicenseId();
	}

	@Override
	public String component2(){
		return getLicenseKey();
	}

	@Override
	public Integer component3(){
		return getLicenseType();
	}

	@Override
	public Boolean component4(){
		return getLicenseClaimed();
	}

	@Override
	public Integer component5(){
		return getLicenseDurationDays();
	}

	@Override
	public LocalDateTime component6(){
		return getLicenseActivationTimestamp();
	}

	@Override
	public Integer value1(){
		return getLicenseId();
	}

	@Override
	public String value2(){
		return getLicenseKey();
	}

	@Override
	public Integer value3(){
		return getLicenseType();
	}

	@Override
	public Boolean value4(){
		return getLicenseClaimed();
	}

	@Override
	public Integer value5(){
		return getLicenseDurationDays();
	}

	@Override
	public LocalDateTime value6(){
		return getLicenseActivationTimestamp();
	}

	@Override
	public LicensesRecord value1(Integer value){
		setLicenseId(value);
		return this;
	}

	@Override
	public LicensesRecord value2(String value){
		setLicenseKey(value);
		return this;
	}

	@Override
	public LicensesRecord value3(Integer value){
		setLicenseType(value);
		return this;
	}

	@Override
	public LicensesRecord value4(Boolean value){
		setLicenseClaimed(value);
		return this;
	}

	@Override
	public LicensesRecord value5(Integer value){
		setLicenseDurationDays(value);
		return this;
	}

	@Override
	public LicensesRecord value6(LocalDateTime value){
		setLicenseActivationTimestamp(value);
		return this;
	}

	@Override
	public LicensesRecord values(Integer value1, String value2, Integer value3, Boolean value4, Integer value5, LocalDateTime value6){
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LicensesRecord
	 */
	public LicensesRecord(){
		super(Licenses.LICENSES);
	}

	/**
	 * Create a detached, initialised LicensesRecord
	 */
	public LicensesRecord(Integer licenseId, String licenseKey, Integer licenseType, Boolean licenseClaimed, Integer licenseDurationDays, LocalDateTime licenseActivationTimestamp){
		super(Licenses.LICENSES);

		setLicenseId(licenseId);
		setLicenseKey(licenseKey);
		setLicenseType(licenseType);
		setLicenseClaimed(licenseClaimed);
		setLicenseDurationDays(licenseDurationDays);
		setLicenseActivationTimestamp(licenseActivationTimestamp);
	}

}
