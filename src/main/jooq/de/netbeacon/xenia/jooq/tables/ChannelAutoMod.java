/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.jooq.tables;


import de.netbeacon.xenia.jooq.Keys;
import de.netbeacon.xenia.jooq.Public;
import de.netbeacon.xenia.jooq.tables.records.ChannelAutoModRecord;
import org.jooq.Record;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChannelAutoMod extends TableImpl<ChannelAutoModRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.channel_auto_mod</code>
     */
    public static final ChannelAutoMod CHANNEL_AUTO_MOD = new ChannelAutoMod();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChannelAutoModRecord> getRecordType() {
        return ChannelAutoModRecord.class;
    }

    /**
     * The column <code>public.channel_auto_mod.channel_id</code>.
     */
    public final TableField<ChannelAutoModRecord, Long> CHANNEL_ID = createField(DSL.name("channel_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.channel_auto_mod.filter_content_words</code>.
     */
    public final TableField<ChannelAutoModRecord, Integer> FILTER_CONTENT_WORDS = createField(DSL.name("filter_content_words"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.channel_auto_mod.filter_content_urls</code>.
     */
    public final TableField<ChannelAutoModRecord, Integer> FILTER_CONTENT_URLS = createField(DSL.name("filter_content_urls"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.channel_auto_mod.filter_behaviour_spam</code>.
     */
    public final TableField<ChannelAutoModRecord, Integer> FILTER_BEHAVIOUR_SPAM = createField(DSL.name("filter_behaviour_spam"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.channel_auto_mod.filter_behaviour_raid</code>.
     */
    public final TableField<ChannelAutoModRecord, Integer> FILTER_BEHAVIOUR_RAID = createField(DSL.name("filter_behaviour_raid"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    private ChannelAutoMod(Name alias, Table<ChannelAutoModRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChannelAutoMod(Name alias, Table<ChannelAutoModRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.channel_auto_mod</code> table reference
     */
    public ChannelAutoMod(String alias) {
        this(DSL.name(alias), CHANNEL_AUTO_MOD);
    }

    /**
     * Create an aliased <code>public.channel_auto_mod</code> table reference
     */
    public ChannelAutoMod(Name alias) {
        this(alias, CHANNEL_AUTO_MOD);
    }

    /**
     * Create a <code>public.channel_auto_mod</code> table reference
     */
    public ChannelAutoMod() {
        this(DSL.name("channel_auto_mod"), null);
    }

    public <O extends Record> ChannelAutoMod(Table<O> child, ForeignKey<O, ChannelAutoModRecord> key) {
        super(child, key, CHANNEL_AUTO_MOD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<ChannelAutoModRecord> getPrimaryKey() {
        return Keys.CHANNEL_AUTO_MOD_PK;
    }

    @Override
    public List<ForeignKey<ChannelAutoModRecord, ?>> getReferences() {
        return Arrays.asList(Keys.CHANNEL_AUTO_MOD__CHANNEL_AUTOMOD_CHANNELS_CHANNEL_ID_FK);
    }

    private transient Channels _channels;

    public Channels channels() {
        if (_channels == null)
            _channels = new Channels(this, Keys.CHANNEL_AUTO_MOD__CHANNEL_AUTOMOD_CHANNELS_CHANNEL_ID_FK);

        return _channels;
    }

    @Override
    public ChannelAutoMod as(String alias) {
        return new ChannelAutoMod(DSL.name(alias), this);
    }

    @Override
    public ChannelAutoMod as(Name alias) {
        return new ChannelAutoMod(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChannelAutoMod rename(String name) {
        return new ChannelAutoMod(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChannelAutoMod rename(Name name) {
        return new ChannelAutoMod(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
