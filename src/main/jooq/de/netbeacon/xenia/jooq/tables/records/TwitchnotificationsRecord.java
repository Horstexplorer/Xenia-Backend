/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.jooq.tables.records;


import de.netbeacon.xenia.jooq.tables.Twitchnotifications;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TwitchnotificationsRecord extends TableRecordImpl<TwitchnotificationsRecord> implements Record6<Integer, LocalDateTime, Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.twitchnotifications.twitchnotification_id</code>.
     */
    public TwitchnotificationsRecord setTwitchnotificationId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.twitchnotifications.twitchnotification_id</code>.
     */
    public Integer getTwitchnotificationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.twitchnotifications.creation_timestamp</code>.
     */
    public TwitchnotificationsRecord setCreationTimestamp(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.twitchnotifications.creation_timestamp</code>.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.twitchnotifications.twitchnotification_discord_channel_id</code>.
     */
    public TwitchnotificationsRecord setTwitchnotificationDiscordChannelId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.twitchnotifications.twitchnotification_discord_channel_id</code>.
     */
    public Long getTwitchnotificationDiscordChannelId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.twitchnotifications.twitchnotification_twitch_channel_id</code>.
     */
    public TwitchnotificationsRecord setTwitchnotificationTwitchChannelId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.twitchnotifications.twitchnotification_twitch_channel_id</code>.
     */
    public Long getTwitchnotificationTwitchChannelId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.twitchnotifications.twitchnotification_twitch_channel_name</code>.
     */
    public TwitchnotificationsRecord setTwitchnotificationTwitchChannelName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.twitchnotifications.twitchnotification_twitch_channel_name</code>.
     */
    public String getTwitchnotificationTwitchChannelName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.twitchnotifications.twitchnotification_custom_message</code>.
     */
    public TwitchnotificationsRecord setTwitchnotificationCustomMessage(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.twitchnotifications.twitchnotification_custom_message</code>.
     */
    public String getTwitchnotificationCustomMessage() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, LocalDateTime, Long, Long, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, LocalDateTime, Long, Long, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Twitchnotifications.TWITCHNOTIFICATIONS.TWITCHNOTIFICATION_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Twitchnotifications.TWITCHNOTIFICATIONS.CREATION_TIMESTAMP;
    }

    @Override
    public Field<Long> field3() {
        return Twitchnotifications.TWITCHNOTIFICATIONS.TWITCHNOTIFICATION_DISCORD_CHANNEL_ID;
    }

    @Override
    public Field<Long> field4() {
        return Twitchnotifications.TWITCHNOTIFICATIONS.TWITCHNOTIFICATION_TWITCH_CHANNEL_ID;
    }

    @Override
    public Field<String> field5() {
        return Twitchnotifications.TWITCHNOTIFICATIONS.TWITCHNOTIFICATION_TWITCH_CHANNEL_NAME;
    }

    @Override
    public Field<String> field6() {
        return Twitchnotifications.TWITCHNOTIFICATIONS.TWITCHNOTIFICATION_CUSTOM_MESSAGE;
    }

    @Override
    public Integer component1() {
        return getTwitchnotificationId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreationTimestamp();
    }

    @Override
    public Long component3() {
        return getTwitchnotificationDiscordChannelId();
    }

    @Override
    public Long component4() {
        return getTwitchnotificationTwitchChannelId();
    }

    @Override
    public String component5() {
        return getTwitchnotificationTwitchChannelName();
    }

    @Override
    public String component6() {
        return getTwitchnotificationCustomMessage();
    }

    @Override
    public Integer value1() {
        return getTwitchnotificationId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreationTimestamp();
    }

    @Override
    public Long value3() {
        return getTwitchnotificationDiscordChannelId();
    }

    @Override
    public Long value4() {
        return getTwitchnotificationTwitchChannelId();
    }

    @Override
    public String value5() {
        return getTwitchnotificationTwitchChannelName();
    }

    @Override
    public String value6() {
        return getTwitchnotificationCustomMessage();
    }

    @Override
    public TwitchnotificationsRecord value1(Integer value) {
        setTwitchnotificationId(value);
        return this;
    }

    @Override
    public TwitchnotificationsRecord value2(LocalDateTime value) {
        setCreationTimestamp(value);
        return this;
    }

    @Override
    public TwitchnotificationsRecord value3(Long value) {
        setTwitchnotificationDiscordChannelId(value);
        return this;
    }

    @Override
    public TwitchnotificationsRecord value4(Long value) {
        setTwitchnotificationTwitchChannelId(value);
        return this;
    }

    @Override
    public TwitchnotificationsRecord value5(String value) {
        setTwitchnotificationTwitchChannelName(value);
        return this;
    }

    @Override
    public TwitchnotificationsRecord value6(String value) {
        setTwitchnotificationCustomMessage(value);
        return this;
    }

    @Override
    public TwitchnotificationsRecord values(Integer value1, LocalDateTime value2, Long value3, Long value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TwitchnotificationsRecord
     */
    public TwitchnotificationsRecord() {
        super(Twitchnotifications.TWITCHNOTIFICATIONS);
    }

    /**
     * Create a detached, initialised TwitchnotificationsRecord
     */
    public TwitchnotificationsRecord(Integer twitchnotificationId, LocalDateTime creationTimestamp, Long twitchnotificationDiscordChannelId, Long twitchnotificationTwitchChannelId, String twitchnotificationTwitchChannelName, String twitchnotificationCustomMessage) {
        super(Twitchnotifications.TWITCHNOTIFICATIONS);

        setTwitchnotificationId(twitchnotificationId);
        setCreationTimestamp(creationTimestamp);
        setTwitchnotificationDiscordChannelId(twitchnotificationDiscordChannelId);
        setTwitchnotificationTwitchChannelId(twitchnotificationTwitchChannelId);
        setTwitchnotificationTwitchChannelName(twitchnotificationTwitchChannelName);
        setTwitchnotificationCustomMessage(twitchnotificationCustomMessage);
    }
}
