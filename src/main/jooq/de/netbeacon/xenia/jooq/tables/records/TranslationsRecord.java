/*
 * This file is generated by jOOQ.
 */
package de.netbeacon.xenia.jooq.tables.records;


import de.netbeacon.xenia.jooq.tables.Translations;
import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TranslationsRecord extends TableRecordImpl<TranslationsRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.translations.translation_id</code>.
     */
    public TranslationsRecord setTranslationId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.translations.translation_id</code>.
     */
    public Long getTranslationId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.translations.translation_identifier</code>.
     */
    public TranslationsRecord setTranslationIdentifier(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.translations.translation_identifier</code>.
     */
    public String getTranslationIdentifier() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.translations.translation_language</code>.
     */
    public TranslationsRecord setTranslationLanguage(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.translations.translation_language</code>.
     */
    public String getTranslationLanguage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.translations.translation</code>.
     */
    public TranslationsRecord setTranslation(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.translations.translation</code>.
     */
    public String getTranslation() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Translations.TRANSLATIONS.TRANSLATION_ID;
    }

    @Override
    public Field<String> field2() {
        return Translations.TRANSLATIONS.TRANSLATION_IDENTIFIER;
    }

    @Override
    public Field<String> field3() {
        return Translations.TRANSLATIONS.TRANSLATION_LANGUAGE;
    }

    @Override
    public Field<String> field4() {
        return Translations.TRANSLATIONS.TRANSLATION;
    }

    @Override
    public Long component1() {
        return getTranslationId();
    }

    @Override
    public String component2() {
        return getTranslationIdentifier();
    }

    @Override
    public String component3() {
        return getTranslationLanguage();
    }

    @Override
    public String component4() {
        return getTranslation();
    }

    @Override
    public Long value1() {
        return getTranslationId();
    }

    @Override
    public String value2() {
        return getTranslationIdentifier();
    }

    @Override
    public String value3() {
        return getTranslationLanguage();
    }

    @Override
    public String value4() {
        return getTranslation();
    }

    @Override
    public TranslationsRecord value1(Long value) {
        setTranslationId(value);
        return this;
    }

    @Override
    public TranslationsRecord value2(String value) {
        setTranslationIdentifier(value);
        return this;
    }

    @Override
    public TranslationsRecord value3(String value) {
        setTranslationLanguage(value);
        return this;
    }

    @Override
    public TranslationsRecord value4(String value) {
        setTranslation(value);
        return this;
    }

    @Override
    public TranslationsRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TranslationsRecord
     */
    public TranslationsRecord() {
        super(Translations.TRANSLATIONS);
    }

    /**
     * Create a detached, initialised TranslationsRecord
     */
    public TranslationsRecord(Long translationId, String translationIdentifier, String translationLanguage, String translation) {
        super(Translations.TRANSLATIONS);

        setTranslationId(translationId);
        setTranslationIdentifier(translationIdentifier);
        setTranslationLanguage(translationLanguage);
        setTranslation(translation);
    }
}
